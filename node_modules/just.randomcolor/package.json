{
  "name": "just.randomcolor",
  "version": "0.1.1",
  "homepage": "http://workshop.rs/projects/just-randomcolor",
  "keywords": [
    "color",
    "colors",
    "random"
  ],
  "description": "generate random color and converts to desired format",
  "main": "just.RandomColor.js",
  "scripts": {
    "test": "mocha -R spec",
    "start": "node server.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:kopipejst/just.randomcolor.git"
  },
  "author": {
    "name": "Ivan Lazarevic"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "~1.0",
    "chai": "~1.6"
  },
  "readme": "#just.RandomColor#\n\n[![Build Status](https://travis-ci.org/kopipejst/just.randomcolor.png)](https://travis-ci.org/kopipejst/just.randomcolor)\n\n\nJavaScript random color generator\n\n##Installation##\n\n###Node.js###\n\n**npm package**\n\n\tnpm install just.randomcolor\n\n\n**use in node.js**\n\n\tvar RandomColor = require('just.randomcolor');\n\n###Browser###\n\n- download just.RandomColor.js from [GitHub](https://github.com/kopipejst/just.randomcolor)\n- include on your page: `<script src=\"just.RandomColor.js\"></script>`\n\n\n##Usage##\n\n####generate random color\n\n**node.js**\n\n***for one color***\n\tvar color = new RandomColor(options);\n\n***for array of colors***\n\tvar colors = new RandomColor(options, length);\n\n**browser**\n\n\tvar color = new just.RandomColor(options);\n\tvar colors = new just.RandomColor(options, length);\n\t\n####Arguments####\n\n***options***\nOptions are optionaly max and min values for each of rbga components. Example:\n\n\tvar options = {\n\t\tr: [50, 60], \n\t\tg: [100,200],\n\t\ta: [0.3, 0.7]\n\t},\n\t\n\tcolor = new RandomColor(options);\n\n***length***\nlength of array of colors (default 1)\n\n####get color\n\n\t***for one color***\n\tcolor.value; // {r: 56, g: 195, b: 227, a: 0.6}\n\n\t***for array of colors***\n\tcolors.colors; // each element in array have `value` property\n\n###functions###\n\n **toHex**\n \n Converts color value to hexadecimal presentation\n \n \tcolor.toHex().value; // \"38c3e3\"\n \tcolors.toHex().colors; // each element in array have `value` property\n \n **toRGB**\n \n Converting to RGB format\n \n \tcolor.toRGB().value; // {r: 56, g: 195, b: 227}\n \tcolors.toRGB().colors; // each element in array have `value` property\n\n **toRGBA**\n \n Converting to RGBA format\n \n \tcolor.toRGBA().value; // {r: 56, g: 195, b: 227, a: 0.6}\n \tcolors.toRGBA().colors; // each element in array have `value` property\n \t\n **toCSS**\n \t\n Return CSS color string\n \n \tcolor.toHex().toCSS(); // \"#38c3e3\"\n \tcolor.toRBG().toCSS(); // \"rgb(56,195,227)\"\n \tcolor.toRGBA().toCSS(); // \"rgba(56,195,227,0.6)\"\n\n \tcolors.toHex().toCSS; // [ '#bc98c8', '#3ab85f', '#321da0', '#251c2f', '#c44d5a' ]\n \tcolors.toRBG().toCSS(); // [ 'rgb(131,174,178)', 'rgb(218,8,251)','rgb(93,224,26)']\n\n **refresh**\n \n Re-generate color value\n \n \tcolor.refresh().value; // {r: 60, g: 175, b: 178, a: 0.6}\n \tcolors.refresh().colors; // each element in array have `value` property\n \n \t\n ",
  "readmeFilename": "README.md",
  "_id": "just.randomcolor@0.1.1",
  "dist": {
    "shasum": "4f489f458f818b7ff5f4d8dcf2d66bdded134b16",
    "tarball": "https://registry.npmjs.org/just.randomcolor/-/just.randomcolor-0.1.1.tgz"
  },
  "_npmVersion": "1.1.65",
  "_npmUser": {
    "name": "kopipejst",
    "email": "devet.sest@gmail.com"
  },
  "maintainers": [
    {
      "name": "kopipejst",
      "email": "devet.sest@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "4f489f458f818b7ff5f4d8dcf2d66bdded134b16",
  "_resolved": "https://registry.npmjs.org/just.randomcolor/-/just.randomcolor-0.1.1.tgz",
  "_from": "just.randomcolor@latest"
}
